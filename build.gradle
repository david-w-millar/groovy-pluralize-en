import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'groovy'
apply plugin: 'codenarc'
apply plugin: 'idea'
apply plugin: 'signing'
apply plugin: 'maven-publish'

description      = 'Groovy extension module to pluralize strings'
version          = '0.1.0'
group            = 'org.millarts'
archivesBaseName = name


defaultTasks 'build'

sourceCompatibility = 1.6
targetCompatibility = 1.6

ext {
  project_url      = 'https://github.com/david-w-millar/groovy-pluralize-en/'
  isReleaseVersion = !version.endsWith('SNAPSHOT')

  groovy_version   = '2.3.6'
  spock_version    = '0.7-groovy-2.0'
  codenarc_version = '0.21'
  evo_version      = '1.2'
}

repositories {
  mavenCentral()
}

dependencies {
  compile "org.codehaus.groovy:groovy-all:${groovy_version}"
  compile "org.atteo:evo-inflector:${evo_version}"
  testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
    exclude module: 'groovy-all'
  }
}

processResources {
  filter ReplaceTokens, tokens: [
      version     : version,
      buildDate   : new Date().format("yyyy-MM-dd HH   : mm : ss.SSSZ"),
      username    : System.properties["user.name"],
      javaVersion : System.properties["java.version"],
      osName      : System.properties["os.name"],
      osVersion   : System.properties["os.version"]
    ]
}

codenarc {
  configFile             = file "${project.projectDir}/config/codenarc.groovy"
  ignoreFailures         = false
  reportFormat           = 'html'
  toolVersion            = codenarc_version
  maxPriority1Violations = 0
  maxPriority2Violations = 0
  maxPriority3Violations = 0
}


tasks.withType(Groovydoc) {
  link 'http://download.oracle.com/javase/6/docs/api/',
         'java.util',
         'java.lang'

  docTitle    = 'Groovy API Documentation for groovy-pluralize-en $version'
  windowTitle = 'Groovy API for groovy-pluralize-en $version'
  footer      = "<p style='text-align: center'>Groovy API Documentation for groovy-pluralize-en $version - Licensed under the Apache License, Version 2.0 - <a href='https://github.com/david-w-millar/groovy-pluralize-en/'>groovy-pluralize-en</a></p>"
}


// ----- [ Packaging and publishing ] -----

task sourceJar(type: Jar) {
  classifier 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
  classifier = 'javadoc'
  from groovydoc
}

signing {
  required { isReleaseVersion }
  sign configurations.archives
}

artifacts {
  archives javadocJar
  archives sourceJar
  archives jar
}


publishing {
  publications {
    maven(MavenPublication) {
      // Artifacts
      artifact sourceJar
      artifact javadocJar
      from components.java

      // Repos
      repositories { maven { url "$buildDir/repo" } }

      // Pom
      pom.withXml {
        // General
        asNode().appendNode('description', description)
        asNode().appendNode('inceptionYear', '2014')
        asNode().appendNode('scm')
          .appendNode('url', project_url)

        // License, SCM
        asNode().appendNode('licenses')
          .appendNode('license').with {
            appendNode('name', 'The Apache Software License, Version 2.0')
            appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
            appendNode('distribution', 'repo')
        }

        // Devs
        asNode().appendNode('developers')
          .appendNode('developer').with {
            appendNode('id', 'david-w-millar')
            appendNode('name', 'David W Millar')
            appendNode('roles')
              .appendNode('role', 'Creator')
        }
      }
    }
  }
}


